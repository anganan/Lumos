import itertools
import numpy as np
import pandas as pd
import statsmodels.api as sm
from sklearn import preprocessing
import matplotlib
import matplotlib.pyplot as plt
matplotlib.rcParams['text.color'] = 'y'
cases_country = pd.read_csv("Daily_Country_Wise_Confirmed_Cases.csv")
cases_country.set_index('Country',inplace=True)
data_1 = cases_country.T
data_1.head()
data_1['Cases']=data_1.sum(axis=1)
data_1 = pd.DataFrame(data_1.Cases)
data_1.index = pd.to_datetime(data_1.index)
from pylab import rcParams
import statsmodels.api as sm
p = d = q = range(0, 3)
pdq = list(itertools.product(p, d, q))
seasonal_pdq = [(x[0], x[1], x[2], 7) for x in list(itertools.product(p, d, q))]
print('Examples')
print('SARIMAX: {} x {}'.format(pdq[22], seasonal_pdq[10]))
from statsmodels.tsa.arima_model import ARIMA
from pmdarima.arima import auto_arima
model = auto_arima(data_1, trace=True, error_action='ignore', suppress_warnings=True)
model.fit(data_1)
forecast = model.predict(n_periods=len(data_1))
forecast = pd.DataFrame(forecast,index = data_1.index,columns=['Prediction'])
model = sm.tsa.arima.ARIMA(data_1, order=(2,1,1))
result = model.fit()
result.summary()
mod = sm.tsa.statespace.SARIMAX(data_1,
                                order=(2, 1, 1),
                                seasonal_order=(1, 0, 1, 7),
                                enforce_stationarity=False,
                                enforce_invertibility=False)
results = mod.fit(disp=0)
pred = result.get_prediction(start=pd.to_datetime('2022-06-1'), dynamic=False)
pred
pred_ci = pred.conf_int()
ax = data_1.plot(label='observed')
pred.predicted_mean.plot(ax=ax, label='Forecast', alpha=.9, figsize=(16, 8))
ax.fill_between(pred_ci.index,
                pred_ci.iloc[:, 0],
                pred_ci.iloc[:, 1], color='b', alpha=.2 )
ax.set_xlabel('Date')
ax.set_ylabel('Confirmed-Cases')
plt.legend()
plt.show()
